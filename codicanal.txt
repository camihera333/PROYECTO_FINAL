#include <stdio.h>

/* PRUEBA DE CODIFICACIÓN Y DECODIFICACIÓN DE CANAL
MÉTODO: CODIFICACIÓN DE BLOQUES LINEALES */


int main(void)
{
	//declaracion de variables locales
	int mensaje=1619;
    int gbits,gbits2,gbits3,gbits4;
	int gcodi,gcodi2,gcodi3,gcodi4;
	int gcbits,gcbits2,gcbits3,gcbits4;
	int gdecodi,gdecodi2,gdecodi3,gdecodi4;
	int mensajecodi,mensajedecodi;

	/*
	Se asume que el mensaje posee doce bits (12), además se le asigna un valor a k=3
	y n=6, es decir que los vectores del mensaje son 8 y el subconjunto es de 6.

	los valores asignados aleatoriamente para codificar cada grupo de bits es:


						000			000000
						001			101001
						010			011010
						011			110011
						100			110100
						101			011101
						110			101110
						111			000111
	*/


    //CODIFICACIÓN DE CANAL

	gbits=(7)&(mensaje); //máscara para guardar el primer grupo de tres bits del mensaje en gbits
	gbits2=(7<<3)&(mensaje); //máscara para guardar el segundo grupo de tres bits del mensaje en gbits2
	gbits3=(7<<6)&(mensaje); //máscara para guardar el tercer grupo de tres bits del mensaje en gbits3
	gbits4=(7<<9)&(mensaje); //máscara para guardar el cuarto grupo de tres bits del mensaje en gbits4

    gbits=gbits;
	gbits2=(gbits2>>3);
	gbits3=(gbits3>>6);
	gbits4=(gbits4>>9);

	// Codificación de uno a uno de los grupos de bits

	if(gbits==0)
	gcodi=0;
	if(gbits==1)
	gcodi=41;
	if(gbits==2)
	gcodi=26;
	if(gbits==3)
	gcodi=51;
	if(gbits==4)
	gcodi=52;
	if(gbits==5)
	gcodi=29;
	if(gbits==6)
	gcodi=46;
	if(gbits==7)
	gcodi=7;

	if(gbits2==0)
	gcodi2=0;
	if(gbits2==1)
	gcodi2=41;
	if(gbits2==2)
	gcodi2=26;
	if(gbits2==3)
	gcodi2=51;
	if(gbits2==4)
	gcodi2=52;
	if(gbits2==5)
	gcodi2=29;
	if(gbits2==6)
	gcodi2=46;
	if(gbits2==7)
	gcodi2=7;

	if(gbits3==0)
	gcodi3=0;
	if(gbits3==1)
	gcodi3=41;
	if(gbits3==2)
	gcodi3=26;
	if(gbits3==3)
	gcodi3=51;
	if(gbits3==4)
	gcodi3=52;
	if(gbits3==5)
	gcodi3=29;
	if(gbits3==6)
	gcodi3=46;
	if(gbits3==7)
	gcodi3=7;

	if(gbits4==0)
	gcodi4=0;
	if(gbits4==1)
	gcodi4=41;
	if(gbits4==2)
	gcodi4=26;
	if(gbits4==3)
	gcodi4=51;
	if(gbits4==4)
	gcodi4=52;
	if(gbits4==5)
	gcodi4=29;
	if(gbits4==6)
	gcodi4=46;
	if(gbits4==7)
	gcodi4=7;

	mensajecodi=(gcodi)|(gcodi2<<6)|(gcodi3<<12)|(gcodi4<<18);


    //DECODIFICACIÓN DE CANAL

    gcbits=(63)&(mensajecodi); //máscara para guardar el primer grupo de seis bits del mensaje en gcbits
	gcbits2=(63<<6)&(mensajecodi); //máscara para guardar el segundo grupo de seis bits del mensaje en gcbits2
	gcbits3=(63<<12)&(mensajecodi); //máscara para guardar el tercer grupo de seis bits del mensaje en gcbits3
	gcbits4=(63<<18)&(mensajecodi); //máscara para guardar el cuarto grupo de seis bits del mensaje en gcbits4

    gcbits=gcbits;
	gcbits2=(gcbits2>>6);
	gcbits3=(gcbits3>>12);
	gcbits4=(gcbits4>>18);

	// Decodificación de uno a uno de los grupos de bits

	if(gcbits==0)
	gdecodi=0;
	if(gcbits==41)
	gdecodi=1;
	if(gcbits==26)
	gdecodi=2;
	if(gcbits==51)
	gdecodi=3;
	if(gcbits==52)
	gdecodi=4;
	if(gcbits==29)
	gdecodi=5;
	if(gcbits==46)
	gdecodi=6;
	if(gcbits==7)
	gdecodi=7;

	if(gcbits2==0)
	gdecodi2=0;
	if(gcbits2==41)
	gdecodi2=1;
	if(gcbits2==26)
	gdecodi2=2;
	if(gcbits2==51)
	gdecodi2=3;
	if(gcbits2==52)
	gdecodi2=4;
	if(gcbits2==29)
	gdecodi2=5;
	if(gcbits2==46)
	gdecodi2=6;
	if(gcbits2==7)
	gdecodi2=7;

	if(gcbits3==0)
	gdecodi3=0;
	if(gcbits3==41)
	gdecodi3=1;
	if(gcbits3==26)
	gdecodi3=2;
	if(gcbits3==51)
	gdecodi3=3;
	if(gcbits3==52)
	gdecodi3=4;
	if(gcbits3==29)
	gdecodi3=5;
	if(gcbits3==46)
	gdecodi3=6;
	if(gcbits3==7)
	gdecodi3=7;

	if(gcbits4==0)
	gdecodi4=0;
	if(gcbits4==41)
	gdecodi4=1;
	if(gcbits4==26)
	gdecodi4=2;
	if(gcbits4==51)
	gdecodi4=3;
	if(gcbits4==52)
	gdecodi4=4;
	if(gcbits4==29)
	gdecodi4=5;
	if(gcbits4==46)
	gdecodi4=6;
	if(gcbits4==7)
	gdecodi4=7;

	mensajedecodi=(gdecodi)|(gdecodi2<<3)|(gdecodi3<<6)|(gdecodi4<<9);

//Interfaz para visualizar el mensaje original y el mensaje decodificado

    printf("%d \n",mensaje);
    printf("%d \n",mensajedecodi);

	return 0;
}